package banco;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;


public class TelaBanco extends javax.swing.JFrame {
    ClienteTableModel tableModel = new ClienteTableModel();
    private int linhaClicadaParaAtualizacao = -1;
    private Cliente clienteSelecionadoParaAtualizacao;
    /**
     * Creates new form TelaBanco
     */
    private int proximoNumeroConta;
    
    private Cliente clienteSelecionadoParaVinculo; 
    
    public TelaBanco() {
        initComponents();
        proximoNumeroConta = 1;
          
        txtFiltro.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                filterTable();
            }
            public void removeUpdate(DocumentEvent e) {
                filterTable();
            }
            public void insertUpdate(DocumentEvent e) {
                filterTable();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSobrenome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRg = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        comboOrdenar = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnListar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        comboFiltro = new javax.swing.JComboBox<>();
        txtFiltro = new javax.swing.JTextField();
        tabCliScroll = new javax.swing.JScrollPane();
        tabCliente = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        tabCliScroll1 = new javax.swing.JScrollPane();
        tabCliente1 = new javax.swing.JTable();
        comboContaTipo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtDeposito = new javax.swing.JTextField();
        txtLimite = new javax.swing.JTextField();
        txtNumeroConta = new javax.swing.JTextField();
        txtMontanteMin = new javax.swing.JTextField();
        txtDepositoMin = new javax.swing.JTextField();
        txtDepositoInicial = new javax.swing.JTextField();
        btnVincular = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome:");

        jLabel2.setText("Sobrenome:");

        jLabel3.setText("RG:");

        jLabel4.setText("CPF:");

        jLabel5.setText("Endere√ßo:");

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        comboOrdenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Sobrenome"}));
        comboOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOrdenarActionPerformed(evt);
            }
        });

        jLabel6.setText("Ordenar por:");

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        jLabel7.setText("Filtrar por:");

        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Sobrenome", "RG", "CPF" }));

        tabCliente.setModel(tableModel);
        tabCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabClienteMouseClicked(evt);
            }
        });
        tabCliScroll.setViewportView(tabCliente);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabCliScroll)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(txtNome))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSobrenome))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(txtRg))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(txtCpf))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtEndereco)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCadastrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAtualizar)
                                .addGap(154, 154, 154)
                                .addComponent(btnExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnListar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnAtualizar)
                    .addComponent(btnExcluir)
                    .addComponent(comboOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnListar)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(tabCliScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastra Cliente", jPanel1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 874, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 555, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Manipular Conta", jPanel3);

        tabCliente1.setModel(tableModel);
        tabCliente1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabCliente1MouseClicked(evt);
            }
        });
        tabCliScroll1.setViewportView(tabCliente1);

        comboContaTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Conta Corrente", "Conta Investimento" }));
        comboContaTipo.setToolTipText("");
        comboContaTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboContaTipoActionPerformed(evt);
            }
        });

        jLabel8.setText("Tipo de Conta:");

        jLabel9.setText("Dep√≥sito:");

        jLabel10.setText("Limite:");

        jLabel11.setText("N√∫mero da Conta:");

        jLabel12.setText("Montante M√≠nimo");

        jLabel13.setText("Dep√≥sito M√≠nimo");

        jLabel14.setText("Dep√≥sito Inicial");

        btnVincular.setText("Vincular");
        btnVincular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVincularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVincular)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboContaTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDeposito, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(txtLimite)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNumeroConta)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel13))))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDepositoInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(txtDepositoMin, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMontanteMin, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGap(170, 170, 170))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tabCliScroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(295, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(comboContaTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMontanteMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(txtLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtDepositoMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(txtNumeroConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDepositoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(btnVincular)
                .addGap(54, 54, 54))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(tabCliScroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(272, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Vincular Conta", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterTable() {
        String filterText = txtFiltro.getText();
        String filterBy = (String) comboFiltro.getSelectedItem();

        List<Cliente> filteredClientes = new ArrayList<>();
        for (Cliente cliente : Sistema.hashClientes.values()) {
            if (filterBy.equals("Nome") && cliente.getNome().toLowerCase().contains(filterText.toLowerCase())) {
                filteredClientes.add(cliente);
            } else if (filterBy.equals("Sobrenome") && cliente.getSobrenome().toLowerCase().contains(filterText.toLowerCase())) {
                filteredClientes.add(cliente);
            } else if (filterBy.equals("RG") && cliente.getRg().toLowerCase().contains(filterText.toLowerCase())) {
                filteredClientes.add(cliente);
            } else if (filterBy.equals("CPF") && cliente.getCpf().toLowerCase().contains(filterText.toLowerCase())) {
                filteredClientes.add(cliente);
            }
        }

        tableModel.setListaContatos(filteredClientes);
    }
    
    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        String nome = txtNome.getText();
        String sobrenome = txtSobrenome.getText();
        String rg = txtRg.getText();
        String cpf = txtCpf.getText();
        String endereco = txtEndereco.getText();
        
        if(cpf.equals("")){
            JOptionPane.showMessageDialog(null,"CPF n√£o pode ser vazio.\n", "Informa√ß√£o", JOptionPane.INFORMATION_MESSAGE);
            return;            
        }
        Cliente c = new Cliente(nome, sobrenome, rg, cpf, endereco);
        Sistema.hashClientes.put(cpf, c);
        this.tableModel.setListaContatos(Sistema.hashClientes);
        this.tabCliente.setRowSelectionInterval(Sistema.hashClientes.size()-1, Sistema.hashClientes.size()-1);
        this.clienteSelecionadoParaAtualizacao = c;
        linhaClicadaParaAtualizacao = Sistema.hashClientes.size()-1;
        
        
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        tableModel.setListaContatos(Sistema.hashClientes);
        this.clienteSelecionadoParaAtualizacao = null;
        linhaClicadaParaAtualizacao=-1;
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
               
        Cliente c = this.getClienteParaAtualizar();
        if(c==null){
            return;
        }
        Sistema.hashClientes.replace(c.getCpf(), c);
        this.tableModel.atualizarCliente(linhaClicadaParaAtualizacao);
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        List<Cliente> listaExcluir = getClienteParaExcluirDaTabela();
        if(listaExcluir.isEmpty()){
            JOptionPane.showMessageDialog(null,"Selecione alguma linha para excluir.\n", "Informa√ß√£o", JOptionPane.INFORMATION_MESSAGE);
            return;            
        }
        this.tableModel.removeClientes(listaExcluir);
        for(Cliente c:listaExcluir)
            Sistema.hashClientes.remove(c.getCpf());
        this.clienteSelecionadoParaAtualizacao = null;
        linhaClicadaParaAtualizacao=-1;
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        txtNome.setText("");
        txtSobrenome.setText("");
        txtRg.setText("");
        txtCpf.setText("");
        txtEndereco.setText("");
        tableModel.setListaContatos(Sistema.hashClientes);
        this.clienteSelecionadoParaAtualizacao = null;
        linhaClicadaParaAtualizacao=-1;
    }//GEN-LAST:event_btnLimparActionPerformed

    private void tabClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabClienteMouseClicked
        linhaClicadaParaAtualizacao = this.tabCliente.rowAtPoint(evt.getPoint());
        Cliente cliente = this.tableModel.getCliente(linhaClicadaParaAtualizacao);
        this.setCliente(cliente); 
    }//GEN-LAST:event_tabClienteMouseClicked

    private void comboOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOrdenarActionPerformed
            String selected = (String) comboOrdenar.getSelectedItem();
            if (selected != null) {
                switch (selected) {
                    case "Nome":
                        tableModel.ordenarPorNome();
                        break;
                    case "Sobrenome":
                        tableModel.ordenarPorSobrenome();
                        break;
                }
    }

    }//GEN-LAST:event_comboOrdenarActionPerformed

    private void tabCliente1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabCliente1MouseClicked
        int linhaSelecionada = tabCliente1.rowAtPoint(evt.getPoint());
    clienteSelecionadoParaVinculo = tableModel.getCliente(linhaSelecionada); // Supondo que tableModel1 √© o modelo da tabela tabCliente1

    // Exemplo de como configurar os campos baseado no tipo de conta selecionado

    String tipoConta = (String) comboContaTipo.getSelectedItem();
    if ("Conta Corrente".equals(tipoConta)) {
        txtDepositoInicial.setEnabled(true);
        txtLimite.setEnabled(true);
        txtMontanteMin.setEnabled(false);
        txtDepositoMin.setEnabled(false);
        txtNumeroConta.setText(String.valueOf((char) proximoNumeroConta())); // Define o n√∫mero da conta automaticamente
    } else if ("Conta Investimento".equals(tipoConta)) {
        txtDepositoInicial.setEnabled(true);
        txtLimite.setEnabled(false);
        txtMontanteMin.setEnabled(true);
        txtDepositoMin.setEnabled(true);
        txtNumeroConta.setEnabled(false);
    }

     }//GEN-LAST:event_tabCliente1MouseClicked

    private void btnVincularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVincularActionPerformed
    if (clienteSelecionadoParaVinculo == null) {
        JOptionPane.showMessageDialog(this, "Selecione um cliente para vincular.", "Informa√ß√£o", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    String tipoConta = (String) comboContaTipo.getSelectedItem();
    if (tipoConta == null || tipoConta.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Selecione um tipo de conta v√°lido.", "Informa√ß√£o", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    try {
        switch (tipoConta) {
            case "Conta Corrente":
                // Depura√ß√£o: Exibe os valores dos campos antes da convers√£o
                System.out.println("Valor de txtDeposito: " + txtDeposito.getText());
                System.out.println("Valor de txtLimite: " + txtLimite.getText());

                double depositoInicial = Double.parseDouble(txtDeposito.getText());
                double limite = Double.parseDouble(txtLimite.getText());
                int numeroContaCorrente = proximoNumeroConta();
                // Exemplo: ContaCorrente contaCorrente = new ContaCorrente(numeroContaCorrente, depositoInicial, limite);
                // clienteSelecionadoParaVinculo.vincularConta(contaCorrente);
                break;
            case "Conta Investimento":
                // Depura√ß√£o: Exibe os valores dos campos antes da convers√£o
                System.out.println("Valor de txtMontanteMin: " + txtMontanteMin.getText());
                System.out.println("Valor de txtDepositoMin: " + txtDepositoMin.getText());
                System.out.println("Valor de txtDepositoInicial: " + txtDepositoInicial.getText());

                double montanteMinimo = Double.parseDouble(txtMontanteMin.getText());
                double depositoMinimo = Double.parseDouble(txtDepositoMin.getText());
                double depositoInicialInvestimento = Double.parseDouble(txtDepositoInicial.getText());
                // Exemplo: ContaInvestimento contaInvestimento = new ContaInvestimento(montanteMinimo, depositoMinimo, depositoInicialInvestimento);
                // clienteSelecionadoParaVinculo.vincularConta(contaInvestimento);
                break;
            default:
                JOptionPane.showMessageDialog(this, "Selecione um tipo de conta v√°lido.", "Informa√ß√£o", JOptionPane.INFORMATION_MESSAGE);
                return;
        }

        JOptionPane.showMessageDialog(this, "Conta vinculada com sucesso!", "Informa√ß√£o", JOptionPane.INFORMATION_MESSAGE);
        limparCampos(); // Limpa os campos ap√≥s a vincula√ß√£o

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Erro ao processar os valores dos campos.", "Erro", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace(); // Apenas para depura√ß√£o, pode ser removido ou tratado de outra forma
    }
    
    }//GEN-LAST:event_btnVincularActionPerformed

    private void comboContaTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboContaTipoActionPerformed
        String input = (String) comboContaTipo.getSelectedItem();
                switch (input) {
                    case "Conta Corrente":
                        txtDeposito.setEnabled(true);
                        txtLimite.setEnabled(true);
                        txtMontanteMin.setEnabled(false);
                        txtDepositoMin.setEnabled(false);
                        txtDepositoInicial.setEnabled(false);
                        txtNumeroConta.setEditable(false);
                        txtNumeroConta.setEnabled(true);
                        break;
                    case "Conta Investimento":
                        txtDeposito.setEnabled(false);
                        txtLimite.setEnabled(false);
                        txtMontanteMin.setEnabled(true);
                        txtDepositoMin.setEnabled(true);
                        txtDepositoInicial.setEnabled(true);
                        txtNumeroConta.setEnabled(false);
                        break;
            } 
    }//GEN-LAST:event_comboContaTipoActionPerformed

    private void limparCampos() {
        txtDepositoInicial.setText("");
        txtLimite.setText("");
        txtMontanteMin.setText("");
        txtDepositoMin.setText("");
        txtNumeroConta.setText(String.valueOf(proximoNumeroConta()));
}

// M√©todo para gerar o pr√≥ximo n√∫mero da conta sequencialmente
private int proximoNumeroConta() {
    return proximoNumeroConta++; // Vari√°vel de classe que mant√©m o n√∫mero da pr√≥xima conta
}
    

    private List<Cliente> getClienteParaExcluirDaTabela() {
        int[] linhasSelecionadas = this.tabCliente.getSelectedRows();
        List<Cliente> listaExcluir = new ArrayList<>();
        for (int i = 0; i < linhasSelecionadas.length; i++) {
            Cliente contato = this.tableModel.getCliente(linhasSelecionadas[i]);
            listaExcluir.add(contato);
        }
        return listaExcluir;
    }
    
    private Cliente getClienteParaAtualizar() {
        if(clienteSelecionadoParaAtualizacao==null){
            JOptionPane.showMessageDialog(null,"Selecione um cliente na tabela para atualizar.\n", "Informa√ß√£o", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }
        if(!txtCpf.getText().equals(clienteSelecionadoParaAtualizacao.getCpf())){
            JOptionPane.showMessageDialog(null,"Voc√™ n√£o pode atualizar o CPF!!!!\n", "Informa√ß√£o", JOptionPane.INFORMATION_MESSAGE);
            txtCpf.setText(clienteSelecionadoParaAtualizacao.getCpf());
            return null;
        }
        clienteSelecionadoParaAtualizacao.setEndereco(txtEndereco.getText());
        clienteSelecionadoParaAtualizacao.setNome(txtNome.getText());
        clienteSelecionadoParaAtualizacao.setRg(txtRg.getText());
        clienteSelecionadoParaAtualizacao.setSobrenome(txtSobrenome.getText());
        return clienteSelecionadoParaAtualizacao;
                
    }
    
    private void setCliente(Cliente c){
        this.clienteSelecionadoParaAtualizacao = c;
        txtNome.setText(c.getNome());
        txtSobrenome.setText(c.getSobrenome());
        txtRg.setText(c.getRg());
        txtCpf.setText(c.getCpf());
        txtEndereco.setText(c.getEndereco());        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaBanco().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnVincular;
    private javax.swing.JComboBox<String> comboContaTipo;
    private javax.swing.JComboBox<String> comboFiltro;
    private javax.swing.JComboBox<String> comboOrdenar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane tabCliScroll;
    private javax.swing.JScrollPane tabCliScroll1;
    private javax.swing.JTable tabCliente;
    private javax.swing.JTable tabCliente1;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtDeposito;
    private javax.swing.JTextField txtDepositoInicial;
    private javax.swing.JTextField txtDepositoMin;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtLimite;
    private javax.swing.JTextField txtMontanteMin;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumeroConta;
    private javax.swing.JTextField txtRg;
    private javax.swing.JTextField txtSobrenome;
    // End of variables declaration//GEN-END:variables
}
